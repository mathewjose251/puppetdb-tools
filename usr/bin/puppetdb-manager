#!/usr/bin/python3

#########################################################################
### Declarations ########################################################
#########################################################################

import puppetdb, re, sys

#########################################################################
### Configuration #######################################################
#########################################################################

## Text for --help
help_text = "query puppetdb for system manager"
usage_text = "usage: %prog [options] HOSTPATTERN"

#########################################################################
### main () #############################################################
#########################################################################

def main():
    p = puppetdb.generateParser(help_text, usage_text)
    opt, args = p.parse_args()

    roles     = puppetdb.hostRoles(opt)
    primary   = puppetdb.hostFact('primary', opt)
    secondary = puppetdb.hostFact('secondary', opt)

    print("%-23s %23s %15s %15s" % ('Host', 'Role', 'Primary', 'Secondary'))
    print()

    for host in sorted (roles.keys()):
        item = []
        item.append (re.split('\.', host)[0])
        item.append (roles[host])

        p = [ 'unknown' ]
        if host in primary:
            p = primary[host].split(',')
        item.append(' '.join(p))

        s = [ 'unknown' ]
        if host in secondary:
            s = secondary[host].split(',')
        item.append(' '.join(s))

        print("%-23s %23s %15s %15s" % (item[0], item[1], item[2], item[3]))

    sys.exit(0)

if __name__ == '__main__':
    main()

#########################################################################
### POD Documentation ###################################################
#########################################################################
## We use this to generate man pages.

"""

=head1 NAME

puppetdb-manager - list all hosts with their managers

=head1 SYNOPSYS

B<puppetdb-manager>

=head1 USAGE

puppetdb-manager queries the puppetdb to find out system roles,
primaries, and secondaries, and prints the whole thing to STDOUT.

Should support both v3 and v4 PuppetDB APIs.

=head1 OPTIONS

=over 4

=item --help

Prints some short help documentation and exits.

=back

=head1 AUTHOR

Tim Skirvin <tskirvin@fnal.gov>

=head1 COPYRIGHT

Copyright 2014-2016, Fermi National Accelerator Laboratory

This program is free software; you may redistribute it and/or modify
it under the same terms as Perl itself.

=cut

"""
